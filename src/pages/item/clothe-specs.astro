---
import type { ItemCategory, ItemColor, ItemMaterial, ItemSize } from '~/types';
import Colors from './../../components/colors.astro';
import { Icon } from 'astro-icon/components';

export interface Props {
    title: string;
    colors: ItemColor[];
    materials: ItemMaterial[];
    sizes: ItemSize[];
    categories: ItemCategory[];
}

const { title, materials, sizes, categories, colors } = Astro.props;

const labels: string[] = ['Materiales', 'Tallas', 'Categorías'];
const values: any[] = [materials, sizes, categories];
---

<section
    id="ClotheSpecs"
    class="flex flex-col gap-4 space-y-2 pl-5 pr-5 lg:pl-0 lg:pr-4"
>
    <div
        class="flex max-w-full flex-row items-center justify-center space-x-3 rounded-lg bg-accent p-2 text-accent lg:hidden"
    >
        <Icon name="mdi:arrow-up-thin-circle-outline" class="size-12" />
        <h3 class="text-md font-semibold tracking-tight text-accent">
            {'Galería'}
        </h3>
    </div>
    <h1
        class="text hidden text-start font-bold tracking-tight text-4xl lg:flex"
    >
        {title}
    </h1>
    <Colors colors={colors} />
    <div class="grid grid-cols-1 gap-2 lg:grid-cols-3">
        {
            labels.map((label, index) => (
                <>
                    <p class="text text-start text-lg">{`${label} :`}</p>
                    <div class="grid-rows-subgrid col-span-1 grid lg:col-span-2">
                        <p class="truncate font-semibold text-offset text-lg">
                            {Array.isArray(values[index]) ? values[index].map((item: { name: string }) => item.name).join(', ') : ''}
                        </p>
                    </div>
                </>
            ))
        }
    </div>
</section>
